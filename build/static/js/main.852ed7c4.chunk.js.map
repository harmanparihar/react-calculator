{"version":3,"sources":["App.js","Display.jsx","Number.jsx","Buttons.jsx","logo.svg","Header.jsx","Footer.jsx","serviceWorker.js","index.js"],"names":["App","_this","Object","_Users_harman_Documents_Term_3_Directed_Studies_Prototype_react_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_harman_Documents_Term_3_Directed_Studies_Prototype_react_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_harman_Documents_Term_3_Directed_Studies_Prototype_react_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","dis_num","result","setState","eval","console","log","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_Display_jsx__WEBPACK_IMPORTED_MODULE_11__","_Buttons_jsx__WEBPACK_IMPORTED_MODULE_10__","buttonpress","bind","React","Component","Display","react__WEBPACK_IMPORTED_MODULE_5___default","className","props","Number","e","target","innerHTML","react_default","onClick","onpress","classname","val","Buttons","Number_Number","module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.852ed7c4.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Header from './Header.jsx';\nimport Footer from './Footer.jsx';\nimport Buttons from './Buttons.jsx';\nimport Display from './Display.jsx';\n\nexport default class App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      dis_num: 0,\n      result:0,\n    };\n  }\n  buttonpress(dis_num){\n    if(dis_num == \"AC\"){\n      this.setState({dis_num: 0});\n      this.setState({result: 0});\n    }else if(this.state.dis_num == 0){\n      this.setState({dis_num : dis_num});\n      this.setState({result : dis_num});\n    }  else if(dis_num == \"\\u00F7\"){\n      this.setState({result : (this.state.dis_num + \"/\")});\n      this.setState({dis_num : (this.state.dis_num + dis_num)});\n    }else if(dis_num == \"\\u00D7\"){\n      this.setState({result : (this.state.dis_num + \"*\")});\n      this.setState({dis_num : (this.state.dis_num + dis_num)});\n    }else if(dis_num == \"+/-\"){\n      this.setState({dis_num: eval(this.state.result)*(-1)});\n      this.setState({result : eval(this.state.result)*(-1)});\n    }else if(dis_num == \"%\"){\n      this.setState({dis_num: eval(this.state.result)*(0.01)});\n      this.setState({result : eval(this.state.result)*(0.01)});\n    }else if(dis_num == \"=\"){\n      this.setState({dis_num: eval(this.state.result)});\n      this.setState({result : eval(this.state.result)});\n    }else {\n      this.setState({dis_num : (this.state.dis_num + dis_num)});\n      this.setState({result : (this.state.result + dis_num)});\n    }\n    console.log(this.state.result);\n  }\n  render(){\n  return(\n  <div>\n    <Display dis_num={this.state.dis_num}/>\n    <Buttons buttonpress={this.buttonpress.bind(this)}/>\n  </div>\n  );\n  }\n}\n","import React from 'react';\nexport default class Display extends React.Component{\n  render(){\n    return(\n      <div className=\"display\">{this.props.dis_num}</div>\n    );\n  }\n}\n","import React from 'react';\nexport default class Number extends React.Component{\n  onpress(e){\n    this.props.buttonpress(e.target.innerHTML);\n  }\n  render(){\n    return(\n      <div onClick={this.onpress.bind(this)} className={this.props.classname}>{this.props.val}</div>\n    );\n  }\n}\n","import React from 'react';\nimport Number from './Number.jsx'\nexport default class Buttons extends React.Component{\n\n  render(){\n    return(\n      <div className=\"num-container\">\n      <Number buttonpress={this.props.buttonpress} val={\"AC\"} classname={\"num op-1\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\"+/-\"} classname={\"num op-1\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\"%\"} classname={\"num op-1\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\"\\u00F7\"} classname={\"num op\"}/>\n      <Number buttonpress={this.props.buttonpress} val={7} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={8} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={9} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\"\\u00D7\"} classname={\"num op\"}/>\n      <Number buttonpress={this.props.buttonpress} val={4} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={5} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={6} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\"-\"} classname={\"num op\"}/>\n      <Number buttonpress={this.props.buttonpress} val={1} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={2} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={3} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\"+\"} classname={\"num op\"}/>\n      <Number buttonpress={this.props.buttonpress} val={0} classname={\"num zero\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\".\"} classname={\"num\"}/>\n      <Number buttonpress={this.props.buttonpress} val={\"=\"} classname={\"num op\"}/>\n      </div>\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nexport default class Header extends React.Component{\n  render(){\n    return(\n      <header>\n        <h1>{this.props.title}</h1>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nexport default class Footer extends React.Component{\n  render(){\n  return(\n  <footer>\n    <h1>footer</h1>\n  </footer>\n  );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}